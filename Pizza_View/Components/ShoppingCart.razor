@using Pizza_Core.Models
@using System.Net.Http
@inject HttpClient Http


<div class="border border-2 border-secondary p-4" style="width: 22rem;">
    @foreach (var pizza in Cart.Keys)
    {
        <div class="d-flex justify-content-between">
            <div class="d-flex justify-content-between">
                <p class="">@pizza.Name X @Cart[pizza].ToString()</p>
            </div>
            <div class="d-flex gap-3">
                <p class="">@(pizza.Price * Cart[pizza]) €</p>
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" class="bi bi-cart-dash" viewBox="0 0 16 16" style="color: red">
                    <path d="M6.5 7a.5.5 0 0 0 0 1h4a.5.5 0 0 0 0-1z" />
                    <path d="M.5 1a.5.5 0 0 0 0 1h1.11l.401 1.607 1.498 7.985A.5.5 0 0 0 4 12h1a2 2 0 1 0 0 4 2 2 0 0 0 0-4h7a2 2 0 1 0 0 4 2 2 0 0 0 0-4h1a.5.5 0 0 0 .491-.408l1.5-8A.5.5 0 0 0 14.5 3H2.89l-.405-1.621A.5.5 0 0 0 2 1zm3.915 10L3.102 4h10.796l-1.313 7zM6 14a1 1 0 1 1-2 0 1 1 0 0 1 2 0m7 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0" />
                </svg>
            </div>
        </div>
    }
    <p>Total: @TotalPrice €</p>
    <bouton class="btn btn-danger" @onclick="OnclickEmpty">Vider le panier</bouton>
</div>

@code {

    [Parameter]
    public Dictionary<Pizza, int> Cart { get; set; }
    [Parameter]
    public decimal TotalPrice { get; set; }
    [Parameter]
    public EventCallback<Dictionary<Pizza, int>> DictCallBack { get; set; }

    protected override void OnParametersSet()
    {
        decimal price = 0;
        foreach (var item in Cart)
        {
            price += (item.Key.Price * item.Value);
        }

        TotalPrice = price;
    }

    public async void OnclickEmpty()
    {
        await DictCallBack.InvokeAsync(Cart);
    }
}